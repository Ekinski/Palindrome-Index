using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Solution {

    // Complete the palindromeIndex function below.
    static int palindromeIndex(string s) {

        for ( int a  = 0; a < s.Length ; a++){
            if (s[a] == s[(s.Length -1) - a]){
                continue;
            } else {
                if (s[a] != s[(s.Length -2) - a] ){
                    return a;
                } else if (s[(s.Length -1) - a] != s[a+1]) {
                    return (s.Length -1) - a;
                } else if (s[a] == s[a+2] ){
                    return a;
                } else if (s[(s.Length -1) - a] == s[(s.Length -3) - a]){
                    return (s.Length -1) - a;
                }     
            }
        }

        return -1;
        
    }

    static void Main(string[] args) {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        int q = Convert.ToInt32(Console.ReadLine());

        for (int qItr = 0; qItr < q; qItr++) {
            string s = Console.ReadLine();

            int result = palindromeIndex(s);

            textWriter.WriteLine(result);
        }

        textWriter.Flush();
        textWriter.Close();
    }
}
